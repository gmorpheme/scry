on: [push, pull_request]

name: scry pipeline

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings


  release-linux:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check, test, fmt, clippy]
    name: Release Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release
      - run: strip target/release/scry && mv target/release/scry target/release/scry_amd64
      - uses: softprops/action-gh-release@v1
        draft: true
        with:
          files: |
            target/release/scry_amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check, test, fmt, clippy]
    name: Release MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release
      - run: strip target/release/scry && mv target/release/scry target/release/scry_darwin
      - uses: softprops/action-gh-release@v1
        draft: true
        with:
          files: |
            target/release/scry_darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [check, test, fmt, clippy]
    name: Release Windows
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release
      - run: strip target/release/scry && mv target/release/scry target/release/scry.exe
      - uses: softprops/action-gh-release@v1
        draft: true
        with:
          files: |
            target/release/scry.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
